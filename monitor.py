import requests
import os
from datetime import datetime
import time

TELEGRAM_BOT_TOKEN = os.environ['TELEGRAM_BOT_TOKEN']
TELEGRAM_CHAT_ID = os.environ['TELEGRAM_CHAT_ID']
SITES_TO_CHECK = [
    "https://mebelmoscow.ru/",
    "https://mebel-liberty.ru/"
]

def is_night_time():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–æ—á–Ω–æ–µ –ª–∏ –≤—Ä–µ–º—è —Å–µ–π—á–∞—Å –ø–æ –ú–æ—Å–∫–≤–µ (01:00-08:00)"""
    from datetime import datetime
    utc_time = datetime.utcnow()
    # –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ UTC –≤ –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
    moscow_time = utc_time.hour + 3
    if moscow_time >= 24:
        moscow_time -= 24
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–æ—á–Ω–æ–µ –ª–∏ –≤—Ä–µ–º—è (1:00-8:00 –ø–æ –ú–æ—Å–∫–≤–µ)
    return 1 <= moscow_time < 8

def send_telegram_alert(message, max_retries=3):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏"""
    if is_night_time():
        print("–ù–æ—á–Ω–æ–µ –≤—Ä–µ–º—è - —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è")
        return False
        
    for attempt in range(max_retries):
        try:
            url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
            payload = {
                "chat_id": TELEGRAM_CHAT_ID,
                "text": message,
                "parse_mode": "HTML"
            }
            response = requests.post(url, json=payload, timeout=10)
            if response.status_code == 200:
                print("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
                return True
            else:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram (–ø–æ–ø—ã—Ç–∫–∞ {attempt+1}): {response.status_code}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram (–ø–æ–ø—ã—Ç–∫–∞ {attempt+1}): {e}")
        
        # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
        time.sleep(5)
    
    print("–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å")
    return False

def check_site(url):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–∞"""
    try:
        response = requests.get(url, timeout=10)
        return {
            'status': response.status_code,
            'success': True
        }
    except Exception as e:
        return {
            'status': str(e),
            'success': False
        }

def send_test_message():
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"""
    current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    test_message = f"üîß –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n–í—Ä–µ–º—è: {current_time}\n–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {test_message}")
    return send_telegram_alert(test_message)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ - –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"""
    current_time = datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∞–π—Ç–æ–≤ –≤ {current_time}")
    print(f"–ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω: {is_night_time()}")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    send_test_message()
    
    for url in SITES_TO_CHECK:
        result = check_site(url)
        
        if not result['success']:
            message = f"üö® –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n–í—Ä–µ–º—è: {current_time}\n–°–∞–π—Ç: {url}\n–û—à–∏–±–∫–∞: {result['status']}"
            print(message)
            send_telegram_alert(message)
        elif result['status'] != 200:
            message = f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç—É—Å–∞\n–í—Ä–µ–º—è: {current_time}\n–°–∞–π—Ç: {url}\n–°—Ç–∞—Ç—É—Å: {result['status']}"
            print(message)
            send_telegram_alert(message)
        else:
            print(f"‚úì {url} - OK")
    
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == "__main__":
    main()
